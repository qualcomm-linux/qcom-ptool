#!/bin/sh
# Copyright (c) 2025 Qualcomm Innovation Center, Inc. All rights reserved.
# SPDX-License-Identifier: BSD-3-Clause-Clear

# Takes rawprogram*.xml and contents.xml files as arguments, collects the
# filenames referenced, and checks if any gpt_* or zeros_* file is missing

set -eu

errors=no

for xml in "$@"; do
    dir="$(dirname "${xml}")"
    rawprogram_filenames="$(
        sed -En 's:.*filename="([^"]+)".*:\1:p' "${xml}"
    )"
    contents_filenames="$(
        sed -En 's:.*<file_name>([^<]+)</file_name>.*:\1:p' "${xml}"
    )"
    for file in $(
        echo ${rawprogram_filenames} ${contents_filenames} | sort -u
        ); do
        case "${file}" in
          # expected files that should be generated by ptool
          gpt_*|zeros_*|patch*.xml|rawprogram*.xml)
            if ! [ -r "${dir}/${file}" ]; then
                errors=yes
                echo "Missing ${file} referenced in ${xml}" >&2
            fi
          ;;
          # known files that will be provided by the OS or boot binaries
          abl.elf) ;;
          aop.mbn) ;;
          boot.img) ;;
          cdt.bin) ;;
          cmnlib.mbn) ;;
          cmnlib64.mbn) ;;
          cpucp.elf) ;;
          devcfg_iot.mbn) ;;
          devcfg.mbn) ;;
          efi.bin) ;;
          DISK) ;;
          dtb.bin) ;;
          emmc_appsboot.mbn) ;;
          featenabler.mbn) ;;
          fs_image_linux.tar.gz.mbn.img) ;;
          hyp.mbn) ;;
          hypvm.mbn) ;;
          imagefv.elf) ;;
          keymaster.mbn) ;;
          keymaster64.mbn) ;;
          keymint.mbn) ;;
          km4.mbn) ;;
          multi_image_qti.mbn) ;;
          multi_image.mbn) ;;
          pmic.elf) ;;
          prog_firehose_ddr.elf) ;;
          prog_firehose_lite.elf) ;;
          qupv3fw.elf) ;;
          rootfs.img) ;;
          rpm.mbn) ;;
          sailhyp.elf) ;;
          sailsw1.elf) ;;
          sbc_1.0_8016.bin) ;;
          sbc_1.0_8096.bin) ;;
          sbl1.mbn) ;;
          sec.dat) ;;
          secs2d.mbn) ;;
          sed.dat) ;;
          shrm.elf) ;;
          storsec.mbn) ;;
          tools.fv) ;;
          tz.mbn) ;;
          uefi_sec.mbn) ;;
          uefi.elf) ;;
          xbl_config.elf) ;;
          xbl_feature_config.elf) ;;
          xbl.elf) ;;
          XblRamdump.elf) ;;
          *)
            echo "Unknown ${file} referenced in ${xml}" >&2
            errors=1
          ;;
        esac
    done
done

if [ "${errors}" != no ]; then
    exit 1
fi
exit 0

